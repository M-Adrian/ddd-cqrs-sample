# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: false      # Automatically injects dependencies in your services.
        autoconfigure: false # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
#        exclude: '../src/{Application,Domain,Infrastructure,UI,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\UI\Controller\:
        resource: '../src/UI/Controller'
        tags: ['controller.service_arguments']

    App\UI\Command\:
        resource: '../src/UI/Command'
        autowire: true
        autoconfigure: true

    App\Infrastructure\:
        resource: '../src/Infrastructure'
        autowire: true
        autoconfigure: true

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones



#    services tactician
    first_command_test:
        class: App\Application\Command\Handler\FirstCommandHandler
        arguments:
            $dispatcher: '@event_dispatcher'
            $transactionManager: '@transaction_manager'
        tags:
            - { name: tactician.handler, command: App\Application\Command\FirstCommand }
        public: true

#   event subscriber
    first_event_subscriber:
        class: App\Application\EventSubscriber\TestEventSubscriber
        arguments:
#            $argument1: '1'
#            $argument2: '2'
        tags:
            - { name: kernel.event_subscriber, event: test.event }

    transaction_manager:
        alias: App\Infrastructure\Persistence\DoctrineMySql\DoctrineMySqlTransactionManager
#        alias: App\Infrastructure\Persistence\DoctrineMongoDb\DoctrineMongoDbTransactionManager

    doctrine_mysql_transaction_manager:
        class: App\Infrastructure\Persistence\DoctrineMySql\DoctrineMySqlTransactionManager
        arguments:
            $em: '@Doctrine\ORM\EntityManagerInterface'

#    doctrine_mongodb_transaction_manager:
#        class: App\Infrastructure\Persistence\DoctrineMySql\DoctrineMySqlTransactionManager
#        arguments:
#            $documentManager: '@Doctrine\ORM\Doc'
